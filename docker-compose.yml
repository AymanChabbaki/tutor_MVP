version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tutor_postgres
    environment:
      POSTGRES_DB: tutor_db
      POSTGRES_USER: tutor_user
      POSTGRES_PASSWORD: tutor_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tutor_user -d tutor_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Tutor Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tutor_backend
    environment:
      - DATABASE_URL=postgresql://tutor_user:tutor_password@postgres:5432/tutor_db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
